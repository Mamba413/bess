% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict.bess.R
\name{predict.bess}
\alias{predict.bess}
\title{make predictions from a "bess" object.}
\usage{
\method{predict}{bess}(object, newx, type = c("link", "response"), ...)
}
\arguments{
\item{object}{Output from the \code{bess} function or the \code{bess}
function.}

\item{newx}{New data used for prediction.}

\item{type}{Type "link" gives the linear predictors for "binomial",
, "poisson" or "cox" models; for "gaussian" models it gives the
fitted values. Type "response" gives the fitted probabilities for
"binomial", fitted mean for "poisson" and the fitted relative-risk for
"cox";For "gaussian", \code{type = "response"} is equivalent to \code{type = "link"}}

\item{\dots}{Additional arguments affecting the predictions produced.}
}
\value{
The object returned depends on the types of family.
}
\description{
Similar to other predict methods, which returns predictions from a fitted
"\code{bess}" object.
}
\details{
For "gaussian" family, \eqn{\hat{y} = X \beta} is returned.

For "binomial" family,\deqn{\hat{Prob}(Y = 1) = exp(X \beta + \epsilon)/(1 +
exp(X \beta)) is returned. For "cox" family, \eqn{\eta = X \beta}} is
returned.
}
\examples{


#-------------------linear model----------------------#
# Generate simulated data
n = 200
p = 20
k = 5
rho = 0.4
SNR = 10
cortype = 1
seed = 10
Data = gen.data(n, p, k, rho, family = "gaussian", cortype = cortype, SNR = SNR, seed = seed)
x = Data$x[1:140, ]
y = Data$y[1:140]
x_new = Data$x[141:200, ]
y_new = Data$y[141:200]
lm.pdas = bess(x, y, method = "sequential")
lambda.list = exp(seq(log(5), log(0.1), length.out = 10))
lm.l0l2 = bess(x, y, type = "bsrr")
pred.pdas = predict(lm.pdas, newx = x_new)
pred.l0l2 = predict(lm.l0l2, newx = x_new)
pred.pdas = predict(lm.pdas, newx = x_new, type = "response")
pred.l0l2 = predict(lm.l0l2, newx = x_new, type = "response")
#-------------------logistic model----------------------#
#Generate simulated data
Data = gen.data(n, p, k, rho, family = "binomial", cortype = cortype, SNR = SNR, seed = seed)

x = Data$x[1:140, ]
y = Data$y[1:140]
x_new = Data$x[141:200, ]
y_new = Data$y[141:200]
logi.pdas = bess(x, y, family = "binomial", method = "sequential", tune = "cv")
lambda.list = exp(seq(log(5), log(0.1), length.out = 10))
logi.l0l2 = bess(x, y, type = "bsrr", tune="cv",
                 family = "binomial", lambda.list = lambda.list, method = "sequential")
pred.pdas = predict(logi.pdas, newx = x_new)
pred.l0l2 = predict(logi.l0l2, newx = x_new)

#-------------------coxph model----------------------#
#Generate simulated data
Data = gen.data(n, p, k, rho, family = "cox", scal = 10)

x = Data$x[1:140, ]
y = Data$y[1:140, ]
x_new = Data$x[141:200, ]
y_new = Data$y[141:200, ]
cox.pdas = bess(x, y, family = "cox", method = "sequential")
lambda.list = exp(seq(log(5), log(0.1), length.out = 10))
cox.l0l2 = bess(x, y, type = "bsrr", family = "cox", lambda.list = lambda.list)
pred.pdas = predict(cox.pdas, newx = x_new)
pred.l0l2 = predict(cox.l0l2, newx = x_new)



}
\references{
Wen, C., Zhang, A., Quan, S. and Wang, X. (2020). BeSS: An R
Package for Best Subset Selection in Linear, Logistic and Cox Proportional
Hazards Models, \emph{Journal of Statistical Software}, Vol. 94(4).
doi:10.18637/jss.v094.i04.
}
\seealso{
\code{\link{bess}}.
}
\author{
Liyuan Hu.
}
